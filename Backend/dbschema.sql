-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.login_user
(
    id bigint NOT NULL,
    username text,
    password text,
    email text,
    phone character(20),
    firstlogin date,
    lastlogin timestamp without time zone,
    "isBuyer" boolean,
    "isSeller" boolean,
    PRIMARY KEY (id),
    CONSTRAINT unique_user UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.user_addresses
(
    userid bigint NOT NULL,
    addrid bigint NOT NULL,
    defaultaddr boolean NOT NULL
);

CREATE TABLE IF NOT EXISTS public.addresses
(
    id bigint NOT NULL,
    street text,
    street_nr smallint,
    city text,
    region text,
    country text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_payment
(
    id bigint NOT NULL,
    userid bigint,
    payment_type text,
    name_on_card text,
    card_nr smallint,
    expiry_date date,
    security_code smallint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_category
(
    id bigint,
    category_name text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id bigint NOT NULL,
    categoryid bigint,
    name text,
    description text,
    media bytea,
    instock boolean,
    price text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.shopping_cart
(
    id bigint,
    userid bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cart_item
(
    id bigint,
    quantity smallint,
    cartid bigint,
    cartproduct bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    id bigint NOT NULL,
    userid bigint,
    orderdate timestamp without time zone,
    orderstatus text,
    ship_address bigint,
    totalprice text,
    orderpayment bigint,
    cartid bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_product
(
    id bigint NOT NULL,
    orderid bigint,
    productid bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    id bigint NOT NULL,
    feedback text,
    userid bigint,
    review_score smallint,
    productid bigint,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.user_addresses
    ADD CONSTRAINT useraddr_user FOREIGN KEY (userid)
    REFERENCES public.login_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_addresses
    ADD CONSTRAINT useraddrid_addr FOREIGN KEY (addrid)
    REFERENCES public.addresses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_payment
    ADD CONSTRAINT userid_loginuser FOREIGN KEY (userid)
    REFERENCES public.login_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT prodcatid_catid FOREIGN KEY (categoryid)
    REFERENCES public.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shopping_cart
    ADD CONSTRAINT userid_loginid FOREIGN KEY (userid)
    REFERENCES public.login_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_item
    ADD CONSTRAINT cartitem_cartid FOREIGN KEY (cartid)
    REFERENCES public.shopping_cart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_item
    ADD CONSTRAINT cartprodid_prodid FOREIGN KEY (cartproduct)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT orderuserid_loginid FOREIGN KEY (userid)
    REFERENCES public.login_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT shipaddr_addrid FOREIGN KEY (ship_address)
    REFERENCES public.addresses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT orderpay_paytype FOREIGN KEY (orderpayment)
    REFERENCES public.user_payment (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT ordercart_cartid FOREIGN KEY (cartid)
    REFERENCES public.shopping_cart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_product
    ADD CONSTRAINT orderproduct_orderid FOREIGN KEY (orderid)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_product
    ADD CONSTRAINT orderprodi_prodid FOREIGN KEY (productid)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT userid_loginid FOREIGN KEY (userid)
    REFERENCES public.login_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT reviewproduct_productid FOREIGN KEY (productid)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
